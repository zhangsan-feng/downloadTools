import * as CryptoJS from 'crypto-js';

import {parse, stringify} from "qs";


async function gen(rid) {
    let vdwdae325w_64we = "220120240902";
    var hbb1fd0204da400 = [0x30473a70, 0xd39a8a21, 0x21b25050, 0x22ce98de, 0xbf6a130, 0xb1bbbb75, 0x7da9343a, 0xe2dcd78e, 0x4b934696, 0x32125903, 0x8cc0b556, 0xad93366a, 0x3531b55a, 0xd6b14acc, 0x422259d3, 0xdd75c864, 0xd884b367, 0xda4bb6b7, 0x78fe516c, 0x66c74aaf, 0xa06e2511, 0x1de573d, 0x3a521807, 0x199d4336, 0xa752922d, 0xd4708013, 0x90410b51, 0x716927cc, 0x18841731, 0x381c38d8, 0x7fe41fcd, 0x4ee278a0, 0xb60b3c2e, 0x60e31cd2, 0x8a522fdc, 0x914e78f, 0xa48781ee, 0x373f9dfd, 0x1458f49a, 0xbed26b8c, 0xb3927453, 0xc5f571ad, 0xe5ecee9d, 0xfe3b25aa, 0xde2e9ca7, 0x8da853fa, 0x339bd3b2, 0xb1b42309, 0xae260768, 0x1fbeb748, 0x781425ba, 0x86c8532, 0x8c8afed4, 0xeb04d91, 0x6609cbe1, 0x724a55d8, 0x2b06fefc, 0x79401eb8, 0xdd3a9e8b, 0xc75866f0, 0x848d551, 0x8e365034, 0x6f3b0ef, 0x91c3a073, 0x18567310, 0x839ac231, 0x72df1f1c, 0xea00eab2, 0x44df0bb3, 0x5a8c19c5, 0x80f67942, 0x3a6ef379, 0x531cdcd2, 0xb50407cc, 0xa07f464c, 0xc4c46446, 0x8f273bed, 0x886a6a33, 0x31ff8c78, 0x80f002c5, 0x24b9381d, 0x31593e1f, 0x66833474, 0xa80898c7, 0x8450d825, 0x29873be2, 0xe694055b, 0x6a2768ec, 0x33e879cc, 0xd1c16557, 0x13d6c8d6, 0x383b36d2, 0x425678b1, 0x6ae777f4, 0xdb8e80fb, 0x25394b39, 0xb98b8a7d, 0x98ce9f65, 0xcd5c9015, 0x2b6b4754, 0xad85ccd1, 0x16660a58, 0x43959677, 0x587c3dcb, 0x4a2f320f, 0x994a9f8, 0xa1893f16, 0xc73eaf28, 0x2634ba60, 0x6b210f09, 0x9eb3bc51, 0x1d48c067, 0xb130e589, 0x7d853176, 0xe724f2f6, 0xfd5c2711];
    var hbb1fd0204da401 = [0xa83b399f, 0x55310768, 0xa7c4d836, 0x2b61cfbe, 0x4698dbd8, 0x9b329add, 0x5caec80d, 0x5b1c81a5, 0x26ce368d, 0x6030514c, 0xaebadb53, 0x9c26b4a8, 0xc3434045, 0x2cadc34f, 0x7410c63f, 0x5bc218f7, 0x181d2274, 0xf1eacfcc, 0x2859a7d9, 0x4ec2a736, 0x5a9b8bc2, 0xa4fbc753, 0x6fda2653, 0x40cf1b39, 0x797d732c, 0xb7a06063, 0xb700cd85, 0xf345a890, 0x68845ae8, 0x1226ed29, 0x4b801287, 0x36befa86, 0x70e0b694, 0x97db9436, 0x41b65dbc, 0xba424c23, 0xb750df31, 0x44cf88b0, 0xe60d1670, 0x729318f3, 0xff48714b, 0x66624fdd, 0xd522ebf8, 0xac19e4a7, 0x9d17b298, 0x6035b2b8, 0xda418afa, 0xc3b7fb64, 0x35baa8c, 0xf6c6cd80, 0xde617d46, 0xce016eaf, 0x5852162d, 0xc6e06685, 0x1e60f2ab, 0x5b15bde6, 0x8b69f6f2, 0xe53fcecc, 0xd31a3831, 0xf7af67c3, 0x4a843a8c, 0x7c0d3acd, 0xf2992e6, 0x8f1b139f, 0x97902220, 0x51f9ed02, 0x70d7f5d1, 0x714e391, 0x1b6c0111, 0xf9bf82cd, 0x79569f24, 0x24c4fba8, 0xb3f53de4, 0x170c78db, 0xd21c9a88, 0x1894ce91, 0x8d0c4a59, 0x20549704, 0x8ca63879, 0x7ec0a07a, 0x5529bd1d, 0xbb804392, 0x75233286, 0x82e53bf8, 0xb7c8f2d9, 0x40fba691, 0x4deca31, 0x7eefe0f2, 0xbfd405ac, 0xe61cf946, 0xee8c492d, 0xe060e8c4, 0xb98b787b, 0x87e83e43, 0x48ef1d47, 0xed3d094d, 0xc7b802f3, 0x8abbcdcd, 0xd82f6793, 0xc4dd03c2, 0x659ceff, 0x2473ec7, 0x5d7c6522, 0xd9e370de, 0x93cdc2fc, 0xa0975cf9, 0xe7026803, 0xd59237b7, 0x99ab27c6, 0xaf34eb1e, 0x3cf4cdeb, 0x3270c69, 0x5773b5c6, 0xb3ba01a8, 0xc72776c8, 0x4a31e092, 0x542bf594, 0x582ea619, 0xaa2dd80c, 0xdf2e6aba, 0x5fb33ea9, 0x95bf4c13, 0x52ebc806, 0x14f64f3, 0x3d29321c, 0x5ca0d470, 0x75d0f71, 0x9e20dcc3, 0xb4e8058f, 0x925b5744, 0x86942a8f, 0x1ec7dd59, 0xb417e57, 0xce0da39c];
    var hbb1fd0204da402 = [0x1e0a9e19, 0x8ff087dd, 0x6afe5c46, 0x6198827a, 0xd1d8e9a4, 0x841748d6, 0x186cf45f, 0xea6a542d, 0xf1d0218, 0xb70de8c4, 0x45ab0453, 0x2b929b47, 0xd636bd0c, 0x929b94e3, 0x1fba4902, 0x73310306, 0xd0f223fd, 0x71975788, 0xf9e7e50c, 0xff452033, 0xf3e7985e, 0x7d0836, 0xc7d7ea38, 0xef272750, 0xe07d294e, 0xc1494a53, 0x87bd01f4, 0xa6fc885b, 0xb3169296, 0x13da7c56, 0xa0ec5f17, 0x30911d5f, 0x1631def6, 0x8bc09283, 0x25019f33, 0xa5f8cd1e, 0x766fd46d, 0xa3a8eb80, 0x60e95129, 0xd5bf0a11, 0xb67d973b, 0xe39ff3ca, 0xc367b4a2, 0x1823f1cf, 0x874185ad, 0xcd4a4167, 0xe33845a9, 0xdbfbbb13, 0xa7d8d6d3, 0x14f0e21e, 0xcc2a8fb9, 0xcba70416, 0xbb3ddf42, 0x2dd08c36, 0x338808f4, 0x83e22673, 0x57714409, 0x31b5f87, 0xff7bfed4, 0xb0860007, 0xe0c4884, 0x86bd96c7, 0x89f52705, 0x81d51eeb, 0x779a372c, 0xeaf80e49, 0x5c3532bd, 0xb0a88e0e, 0x8f050da2, 0xe5d3a22, 0x123b1fb1, 0x3b1b240e, 0xe3720cf9, 0xbfb81fe5, 0x2bd11946, 0x5e02573c, 0xd2b13ae8, 0x53378bee, 0xdfdc9468, 0xcab3330b, 0xe23a3b15, 0x601792bb, 0x5f58bada, 0x8c884e0d, 0x9613ba85, 0xacf513f3, 0x6f0c91bd, 0x51b30115, 0x1cb6b9ce, 0xb45741a3, 0xe0f9ff4e, 0xc71f4c15, 0xc7f64417, 0xea93440e, 0x510daa7, 0x2c62edbd, 0xd106542, 0x2de614d7, 0x46553438, 0xfe38a843, 0xa728d26b, 0x1476229d, 0xe6198c54, 0x3a0757f6, 0x7c1fcb4b, 0x47eaa0d4, 0x266f88c0, 0x6b3662e2, 0xf6a71dbd, 0x1052b00e, 0xa80e8d78, 0x6d85e965, 0x6a3b9bb5, 0x8df94eb3, 0x407893e8, 0x62fdf2f8, 0xe8c0638f, 0x9bd80c48];

    function q7cad0d5d90(n9e1gc9493c1400, n9e1gc9493c1401, n9e1gc9493c1402, k) {
        var rk = [19, 22, 34, 33, 29, 15, 36, 20, 10, 19, 22, 34, 33, 29, 15, 36, 20, 10, 19, 22, 34, 33, 29, 15, 36, 20, 10, 19, 22, 34, 33, 29, 15, 36, 20, 10, 19, 22, 34, 33, 29, 15, 36, 20, 10, 19, 22, 34, 33, 29, 15, 36, 20, 10, 19, 22, 34, 33];
        var k2 = [0x7110753, 0x32fcd11b];
        var lk = [0x7110753, 0x32fcd11b];
        var v = hbb1fd0204da400.slice(0);
        for (var O = 0; O < 116; O++) {
            v[O] ^= 0x5e711f56;
        }
        v[1] += lk[1];
        v[0] = (v[0] >>> (lk[0] % 16)) | (v[0] << (32 - (lk[0] % 16)));
        v[3] -= lk[1];
        v[2] += lk[0];
        v[5] = (v[5] >>> (lk[1] % 16)) | (v[5] << (32 - (lk[1] % 16)));
        v[4] -= lk[0];
        v[7] += lk[1];
        v[6] = (v[6] << (lk[0] % 16)) | (v[6] >>> (32 - (lk[0] % 16)));
        v[9] = (v[9] << (lk[1] % 16)) | (v[9] >>> (32 - (lk[1] % 16)));
        v[8] = (v[8] << (lk[0] % 16)) | (v[8] >>> (32 - (lk[0] % 16)));
        v[11] -= lk[1];
        v[10] = (v[10] >>> (lk[0] % 16)) | (v[10] << (32 - (lk[0] % 16)));
        v[13] ^= lk[1];
        v[12] += lk[0];
        v[15] = (v[15] << (lk[1] % 16)) | (v[15] >>> (32 - (lk[1] % 16)));
        v[14] ^= lk[0];
        v[17] -= lk[1];
        v[16] -= lk[0];
        v[19] += lk[1];
        v[18] = (v[18] >>> (lk[0] % 16)) | (v[18] << (32 - (lk[0] % 16)));
        v[21] -= lk[1];
        v[20] += lk[0];
        v[23] = (v[23] >>> (lk[1] % 16)) | (v[23] << (32 - (lk[1] % 16)));
        v[22] -= lk[0];
        v[25] += lk[1];
        v[24] = (v[24] << (lk[0] % 16)) | (v[24] >>> (32 - (lk[0] % 16)));
        v[27] = (v[27] << (lk[1] % 16)) | (v[27] >>> (32 - (lk[1] % 16)));
        v[26] = (v[26] << (lk[0] % 16)) | (v[26] >>> (32 - (lk[0] % 16)));
        v[29] -= lk[1];
        v[28] = (v[28] >>> (lk[0] % 16)) | (v[28] << (32 - (lk[0] % 16)));
        v[31] ^= lk[1];
        v[30] += lk[0];
        v[33] = (v[33] << (lk[1] % 16)) | (v[33] >>> (32 - (lk[1] % 16)));
        v[32] ^= lk[0];
        v[35] -= lk[1];
        v[34] -= lk[0];
        v[37] += lk[1];
        v[36] = (v[36] >>> (lk[0] % 16)) | (v[36] << (32 - (lk[0] % 16)));
        v[39] -= lk[1];
        v[38] += lk[0];
        v[41] = (v[41] >>> (lk[1] % 16)) | (v[41] << (32 - (lk[1] % 16)));
        v[40] -= lk[0];
        v[43] += lk[1];
        v[42] = (v[42] << (lk[0] % 16)) | (v[42] >>> (32 - (lk[0] % 16)));
        v[45] = (v[45] << (lk[1] % 16)) | (v[45] >>> (32 - (lk[1] % 16)));
        v[44] = (v[44] << (lk[0] % 16)) | (v[44] >>> (32 - (lk[0] % 16)));
        v[47] -= lk[1];
        v[46] = (v[46] >>> (lk[0] % 16)) | (v[46] << (32 - (lk[0] % 16)));
        v[49] ^= lk[1];
        v[48] += lk[0];
        v[51] = (v[51] << (lk[1] % 16)) | (v[51] >>> (32 - (lk[1] % 16)));
        v[50] ^= lk[0];
        v[53] -= lk[1];
        v[52] -= lk[0];
        v[55] += lk[1];
        v[54] = (v[54] >>> (lk[0] % 16)) | (v[54] << (32 - (lk[0] % 16)));
        v[57] -= lk[1];
        v[56] += lk[0];
        v[59] = (v[59] >>> (lk[1] % 16)) | (v[59] << (32 - (lk[1] % 16)));
        v[58] -= lk[0];
        v[61] += lk[1];
        v[60] = (v[60] << (lk[0] % 16)) | (v[60] >>> (32 - (lk[0] % 16)));
        v[63] = (v[63] << (lk[1] % 16)) | (v[63] >>> (32 - (lk[1] % 16)));
        v[62] = (v[62] << (lk[0] % 16)) | (v[62] >>> (32 - (lk[0] % 16)));
        v[65] -= lk[1];
        v[64] = (v[64] >>> (lk[0] % 16)) | (v[64] << (32 - (lk[0] % 16)));
        v[67] ^= lk[1];
        v[66] += lk[0];
        v[69] = (v[69] << (lk[1] % 16)) | (v[69] >>> (32 - (lk[1] % 16)));
        v[68] ^= lk[0];
        v[71] -= lk[1];
        v[70] -= lk[0];
        v[73] += lk[1];
        v[72] = (v[72] >>> (lk[0] % 16)) | (v[72] << (32 - (lk[0] % 16)));
        v[75] -= lk[1];
        v[74] += lk[0];
        v[77] = (v[77] >>> (lk[1] % 16)) | (v[77] << (32 - (lk[1] % 16)));
        v[76] -= lk[0];
        v[79] += lk[1];
        v[78] = (v[78] << (lk[0] % 16)) | (v[78] >>> (32 - (lk[0] % 16)));
        v[81] = (v[81] << (lk[1] % 16)) | (v[81] >>> (32 - (lk[1] % 16)));
        v[80] = (v[80] << (lk[0] % 16)) | (v[80] >>> (32 - (lk[0] % 16)));
        v[83] -= lk[1];
        v[82] = (v[82] >>> (lk[0] % 16)) | (v[82] << (32 - (lk[0] % 16)));
        v[85] ^= lk[1];
        v[84] += lk[0];
        v[87] = (v[87] << (lk[1] % 16)) | (v[87] >>> (32 - (lk[1] % 16)));
        v[86] ^= lk[0];
        v[89] -= lk[1];
        v[88] -= lk[0];
        v[91] += lk[1];
        v[90] = (v[90] >>> (lk[0] % 16)) | (v[90] << (32 - (lk[0] % 16)));
        v[93] -= lk[1];
        v[92] += lk[0];
        v[95] = (v[95] >>> (lk[1] % 16)) | (v[95] << (32 - (lk[1] % 16)));
        v[94] -= lk[0];
        v[97] += lk[1];
        v[96] = (v[96] << (lk[0] % 16)) | (v[96] >>> (32 - (lk[0] % 16)));
        v[99] = (v[99] << (lk[1] % 16)) | (v[99] >>> (32 - (lk[1] % 16)));
        v[98] = (v[98] << (lk[0] % 16)) | (v[98] >>> (32 - (lk[0] % 16)));
        v[101] -= lk[1];
        v[100] = (v[100] >>> (lk[0] % 16)) | (v[100] << (32 - (lk[0] % 16)));
        v[103] ^= lk[1];
        v[102] += lk[0];
        v[105] = (v[105] << (lk[1] % 16)) | (v[105] >>> (32 - (lk[1] % 16)));
        v[104] ^= lk[0];
        v[107] -= lk[1];
        v[106] -= lk[0];
        v[109] += lk[1];
        v[108] = (v[108] >>> (lk[0] % 16)) | (v[108] << (32 - (lk[0] % 16)));
        v[111] -= lk[1];
        v[110] += lk[0];
        v[113] = (v[113] >>> (lk[1] % 16)) | (v[113] << (32 - (lk[1] % 16)));
        v[112] -= lk[0];
        v[115] += lk[1];
        v[114] = (v[114] << (lk[0] % 16)) | (v[114] >>> (32 - (lk[0] % 16)));
        for (var I = 0; I < 116; I += 2) {
            var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
            for (i = 0; i < rk[I / 2]; i++) {
                v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
                sum -= d;
                v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
            }
            v[I] = v0 ^ k2[1];
            v[I + 1] = v1 ^ k2[0];
        }
        for (var O = 115; O > 0; O--) {
            v[O] ^= v[O - 1];
        }
        v[0] ^= 0x5e711f56;
        var strc = "";
        for (var i = 0; i < v.length; i++) {
            strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
        }
        return strc;
    }

    function q7cad0d5d91(n9e1gc9493c1400, n9e1gc9493c1401, n9e1gc9493c1402, k) {
        var rk = [22, 30, 23, 39, 31, 27, 36, 17, 10, 22, 30, 23, 39, 31, 27, 36, 17, 10, 22, 30, 23, 39, 31, 27, 36, 17, 10, 22, 30, 23, 39, 31, 27, 36, 17, 10, 22, 30, 23, 39, 31, 27, 36, 17, 10, 22, 30, 23, 39, 31, 27, 36, 17, 10, 22, 30, 23, 39, 31, 27, 36, 17, 10, 22, 30, 23, 39];
        var k2 = [0x27f91a12, 0x1e37d0ea];
        var lk = [0x27f91a12, 0x1e37d0ea];
        var v = hbb1fd0204da401.slice(0);
        for (var O = 0; O < 134; O++) {
            v[O] ^= 0xfa63d03;
        }
        v[1] += lk[1];
        v[0] -= lk[0];
        v[3] = (v[3] << (lk[1] % 16)) | (v[3] >>> (32 - (lk[1] % 16)));
        v[2] = (v[2] >>> (lk[0] % 16)) | (v[2] << (32 - (lk[0] % 16)));
        v[5] -= lk[1];
        v[4] ^= lk[0];
        v[7] += lk[1];
        v[6] = (v[6] >>> (lk[0] % 16)) | (v[6] << (32 - (lk[0] % 16)));
        v[9] = (v[9] >>> (lk[1] % 16)) | (v[9] << (32 - (lk[1] % 16)));
        v[8] = (v[8] << (lk[0] % 16)) | (v[8] >>> (32 - (lk[0] % 16)));
        v[11] = (v[11] << (lk[1] % 16)) | (v[11] >>> (32 - (lk[1] % 16)));
        v[10] += lk[0];
        v[13] -= lk[1];
        v[12] = (v[12] << (lk[0] % 16)) | (v[12] >>> (32 - (lk[0] % 16)));
        v[15] = (v[15] >>> (lk[1] % 16)) | (v[15] << (32 - (lk[1] % 16)));
        v[14] += lk[0];
        v[17] -= lk[1];
        v[16] -= lk[0];
        v[19] += lk[1];
        v[18] -= lk[0];
        v[21] = (v[21] << (lk[1] % 16)) | (v[21] >>> (32 - (lk[1] % 16)));
        v[20] = (v[20] >>> (lk[0] % 16)) | (v[20] << (32 - (lk[0] % 16)));
        v[23] -= lk[1];
        v[22] ^= lk[0];
        v[25] += lk[1];
        v[24] = (v[24] >>> (lk[0] % 16)) | (v[24] << (32 - (lk[0] % 16)));
        v[27] = (v[27] >>> (lk[1] % 16)) | (v[27] << (32 - (lk[1] % 16)));
        v[26] = (v[26] << (lk[0] % 16)) | (v[26] >>> (32 - (lk[0] % 16)));
        v[29] = (v[29] << (lk[1] % 16)) | (v[29] >>> (32 - (lk[1] % 16)));
        v[28] += lk[0];
        v[31] -= lk[1];
        v[30] = (v[30] << (lk[0] % 16)) | (v[30] >>> (32 - (lk[0] % 16)));
        v[33] = (v[33] >>> (lk[1] % 16)) | (v[33] << (32 - (lk[1] % 16)));
        v[32] += lk[0];
        v[35] -= lk[1];
        v[34] -= lk[0];
        v[37] += lk[1];
        v[36] -= lk[0];
        v[39] = (v[39] << (lk[1] % 16)) | (v[39] >>> (32 - (lk[1] % 16)));
        v[38] = (v[38] >>> (lk[0] % 16)) | (v[38] << (32 - (lk[0] % 16)));
        v[41] -= lk[1];
        v[40] ^= lk[0];
        v[43] += lk[1];
        v[42] = (v[42] >>> (lk[0] % 16)) | (v[42] << (32 - (lk[0] % 16)));
        v[45] = (v[45] >>> (lk[1] % 16)) | (v[45] << (32 - (lk[1] % 16)));
        v[44] = (v[44] << (lk[0] % 16)) | (v[44] >>> (32 - (lk[0] % 16)));
        v[47] = (v[47] << (lk[1] % 16)) | (v[47] >>> (32 - (lk[1] % 16)));
        v[46] += lk[0];
        v[49] -= lk[1];
        v[48] = (v[48] << (lk[0] % 16)) | (v[48] >>> (32 - (lk[0] % 16)));
        v[51] = (v[51] >>> (lk[1] % 16)) | (v[51] << (32 - (lk[1] % 16)));
        v[50] += lk[0];
        v[53] -= lk[1];
        v[52] -= lk[0];
        v[55] += lk[1];
        v[54] -= lk[0];
        v[57] = (v[57] << (lk[1] % 16)) | (v[57] >>> (32 - (lk[1] % 16)));
        v[56] = (v[56] >>> (lk[0] % 16)) | (v[56] << (32 - (lk[0] % 16)));
        v[59] -= lk[1];
        v[58] ^= lk[0];
        v[61] += lk[1];
        v[60] = (v[60] >>> (lk[0] % 16)) | (v[60] << (32 - (lk[0] % 16)));
        v[63] = (v[63] >>> (lk[1] % 16)) | (v[63] << (32 - (lk[1] % 16)));
        v[62] = (v[62] << (lk[0] % 16)) | (v[62] >>> (32 - (lk[0] % 16)));
        v[65] = (v[65] << (lk[1] % 16)) | (v[65] >>> (32 - (lk[1] % 16)));
        v[64] += lk[0];
        v[67] -= lk[1];
        v[66] = (v[66] << (lk[0] % 16)) | (v[66] >>> (32 - (lk[0] % 16)));
        v[69] = (v[69] >>> (lk[1] % 16)) | (v[69] << (32 - (lk[1] % 16)));
        v[68] += lk[0];
        v[71] -= lk[1];
        v[70] -= lk[0];
        v[73] += lk[1];
        v[72] -= lk[0];
        v[75] = (v[75] << (lk[1] % 16)) | (v[75] >>> (32 - (lk[1] % 16)));
        v[74] = (v[74] >>> (lk[0] % 16)) | (v[74] << (32 - (lk[0] % 16)));
        v[77] -= lk[1];
        v[76] ^= lk[0];
        v[79] += lk[1];
        v[78] = (v[78] >>> (lk[0] % 16)) | (v[78] << (32 - (lk[0] % 16)));
        v[81] = (v[81] >>> (lk[1] % 16)) | (v[81] << (32 - (lk[1] % 16)));
        v[80] = (v[80] << (lk[0] % 16)) | (v[80] >>> (32 - (lk[0] % 16)));
        v[83] = (v[83] << (lk[1] % 16)) | (v[83] >>> (32 - (lk[1] % 16)));
        v[82] += lk[0];
        v[85] -= lk[1];
        v[84] = (v[84] << (lk[0] % 16)) | (v[84] >>> (32 - (lk[0] % 16)));
        v[87] = (v[87] >>> (lk[1] % 16)) | (v[87] << (32 - (lk[1] % 16)));
        v[86] += lk[0];
        v[89] -= lk[1];
        v[88] -= lk[0];
        v[91] += lk[1];
        v[90] -= lk[0];
        v[93] = (v[93] << (lk[1] % 16)) | (v[93] >>> (32 - (lk[1] % 16)));
        v[92] = (v[92] >>> (lk[0] % 16)) | (v[92] << (32 - (lk[0] % 16)));
        v[95] -= lk[1];
        v[94] ^= lk[0];
        v[97] += lk[1];
        v[96] = (v[96] >>> (lk[0] % 16)) | (v[96] << (32 - (lk[0] % 16)));
        v[99] = (v[99] >>> (lk[1] % 16)) | (v[99] << (32 - (lk[1] % 16)));
        v[98] = (v[98] << (lk[0] % 16)) | (v[98] >>> (32 - (lk[0] % 16)));
        v[101] = (v[101] << (lk[1] % 16)) | (v[101] >>> (32 - (lk[1] % 16)));
        v[100] += lk[0];
        v[103] -= lk[1];
        v[102] = (v[102] << (lk[0] % 16)) | (v[102] >>> (32 - (lk[0] % 16)));
        v[105] = (v[105] >>> (lk[1] % 16)) | (v[105] << (32 - (lk[1] % 16)));
        v[104] += lk[0];
        v[107] -= lk[1];
        v[106] -= lk[0];
        v[109] += lk[1];
        v[108] -= lk[0];
        v[111] = (v[111] << (lk[1] % 16)) | (v[111] >>> (32 - (lk[1] % 16)));
        v[110] = (v[110] >>> (lk[0] % 16)) | (v[110] << (32 - (lk[0] % 16)));
        v[113] -= lk[1];
        v[112] ^= lk[0];
        v[115] += lk[1];
        v[114] = (v[114] >>> (lk[0] % 16)) | (v[114] << (32 - (lk[0] % 16)));
        v[117] = (v[117] >>> (lk[1] % 16)) | (v[117] << (32 - (lk[1] % 16)));
        v[116] = (v[116] << (lk[0] % 16)) | (v[116] >>> (32 - (lk[0] % 16)));
        v[119] = (v[119] << (lk[1] % 16)) | (v[119] >>> (32 - (lk[1] % 16)));
        v[118] += lk[0];
        v[121] -= lk[1];
        v[120] = (v[120] << (lk[0] % 16)) | (v[120] >>> (32 - (lk[0] % 16)));
        v[123] = (v[123] >>> (lk[1] % 16)) | (v[123] << (32 - (lk[1] % 16)));
        v[122] += lk[0];
        v[125] -= lk[1];
        v[124] -= lk[0];
        v[127] += lk[1];
        v[126] -= lk[0];
        v[129] = (v[129] << (lk[1] % 16)) | (v[129] >>> (32 - (lk[1] % 16)));
        v[128] = (v[128] >>> (lk[0] % 16)) | (v[128] << (32 - (lk[0] % 16)));
        v[131] -= lk[1];
        v[130] ^= lk[0];
        v[133] += lk[1];
        v[132] = (v[132] >>> (lk[0] % 16)) | (v[132] << (32 - (lk[0] % 16)));
        for (var I = 0; I < 134; I += 2) {
            var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
            for (i = 0; i < rk[I / 2]; i++) {
                v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
                sum -= d;
                v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
            }
            v[I] = v0 ^ k2[1];
            v[I + 1] = v1 ^ k2[0];
        }
        for (var O = 133; O > 0; O--) {
            v[O] ^= v[O - 1];
        }
        v[0] ^= 0xfa63d03;
        var strc = "";
        for (var i = 0; i < v.length; i++) {
            strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
        }
        return strc;
    }

    function q7cad0d5d92(n9e1gc9493c1400, n9e1gc9493c1401, n9e1gc9493c1402, k) {
        var rk = [32, 32, 29, 18, 26, 12, 19, 15, 10, 32, 32, 29, 18, 26, 12, 19, 15, 10, 32, 32, 29, 18, 26, 12, 19, 15, 10, 32, 32, 29, 18, 26, 12, 19, 15, 10, 32, 32, 29, 18, 26, 12, 19, 15, 10, 32, 32, 29, 18, 26, 12, 19, 15, 10, 32, 32, 29, 18, 26];
        var k2 = [0x45463e32, 0x7fb87c9f];
        var lk = [0x45463e32, 0x7fb87c9f];
        var v = hbb1fd0204da402.slice(0);
        for (var O = 0; O < 118; O++) {
            v[O] ^= 0x3a3603ef;
        }
        v[1] += lk[1];
        v[0] ^= lk[0];
        v[3] += lk[1];
        v[2] ^= lk[0];
        v[5] = (v[5] << (lk[1] % 16)) | (v[5] >>> (32 - (lk[1] % 16)));
        v[4] = (v[4] >>> (lk[0] % 16)) | (v[4] << (32 - (lk[0] % 16)));
        v[7] += lk[1];
        v[6] = (v[6] >>> (lk[0] % 16)) | (v[6] << (32 - (lk[0] % 16)));
        v[9] += lk[1];
        v[8] = (v[8] >>> (lk[0] % 16)) | (v[8] << (32 - (lk[0] % 16)));
        v[11] = (v[11] << (lk[1] % 16)) | (v[11] >>> (32 - (lk[1] % 16)));
        v[10] += lk[0];
        v[13] += lk[1];
        v[12] += lk[0];
        v[15] ^= lk[1];
        v[14] = (v[14] >>> (lk[0] % 16)) | (v[14] << (32 - (lk[0] % 16)));
        v[17] -= lk[1];
        v[16] -= lk[0];
        v[19] += lk[1];
        v[18] ^= lk[0];
        v[21] += lk[1];
        v[20] ^= lk[0];
        v[23] = (v[23] << (lk[1] % 16)) | (v[23] >>> (32 - (lk[1] % 16)));
        v[22] = (v[22] >>> (lk[0] % 16)) | (v[22] << (32 - (lk[0] % 16)));
        v[25] += lk[1];
        v[24] = (v[24] >>> (lk[0] % 16)) | (v[24] << (32 - (lk[0] % 16)));
        v[27] += lk[1];
        v[26] = (v[26] >>> (lk[0] % 16)) | (v[26] << (32 - (lk[0] % 16)));
        v[29] = (v[29] << (lk[1] % 16)) | (v[29] >>> (32 - (lk[1] % 16)));
        v[28] += lk[0];
        v[31] += lk[1];
        v[30] += lk[0];
        v[33] ^= lk[1];
        v[32] = (v[32] >>> (lk[0] % 16)) | (v[32] << (32 - (lk[0] % 16)));
        v[35] -= lk[1];
        v[34] -= lk[0];
        v[37] += lk[1];
        v[36] ^= lk[0];
        v[39] += lk[1];
        v[38] ^= lk[0];
        v[41] = (v[41] << (lk[1] % 16)) | (v[41] >>> (32 - (lk[1] % 16)));
        v[40] = (v[40] >>> (lk[0] % 16)) | (v[40] << (32 - (lk[0] % 16)));
        v[43] += lk[1];
        v[42] = (v[42] >>> (lk[0] % 16)) | (v[42] << (32 - (lk[0] % 16)));
        v[45] += lk[1];
        v[44] = (v[44] >>> (lk[0] % 16)) | (v[44] << (32 - (lk[0] % 16)));
        v[47] = (v[47] << (lk[1] % 16)) | (v[47] >>> (32 - (lk[1] % 16)));
        v[46] += lk[0];
        v[49] += lk[1];
        v[48] += lk[0];
        v[51] ^= lk[1];
        v[50] = (v[50] >>> (lk[0] % 16)) | (v[50] << (32 - (lk[0] % 16)));
        v[53] -= lk[1];
        v[52] -= lk[0];
        v[55] += lk[1];
        v[54] ^= lk[0];
        v[57] += lk[1];
        v[56] ^= lk[0];
        v[59] = (v[59] << (lk[1] % 16)) | (v[59] >>> (32 - (lk[1] % 16)));
        v[58] = (v[58] >>> (lk[0] % 16)) | (v[58] << (32 - (lk[0] % 16)));
        v[61] += lk[1];
        v[60] = (v[60] >>> (lk[0] % 16)) | (v[60] << (32 - (lk[0] % 16)));
        v[63] += lk[1];
        v[62] = (v[62] >>> (lk[0] % 16)) | (v[62] << (32 - (lk[0] % 16)));
        v[65] = (v[65] << (lk[1] % 16)) | (v[65] >>> (32 - (lk[1] % 16)));
        v[64] += lk[0];
        v[67] += lk[1];
        v[66] += lk[0];
        v[69] ^= lk[1];
        v[68] = (v[68] >>> (lk[0] % 16)) | (v[68] << (32 - (lk[0] % 16)));
        v[71] -= lk[1];
        v[70] -= lk[0];
        v[73] += lk[1];
        v[72] ^= lk[0];
        v[75] += lk[1];
        v[74] ^= lk[0];
        v[77] = (v[77] << (lk[1] % 16)) | (v[77] >>> (32 - (lk[1] % 16)));
        v[76] = (v[76] >>> (lk[0] % 16)) | (v[76] << (32 - (lk[0] % 16)));
        v[79] += lk[1];
        v[78] = (v[78] >>> (lk[0] % 16)) | (v[78] << (32 - (lk[0] % 16)));
        v[81] += lk[1];
        v[80] = (v[80] >>> (lk[0] % 16)) | (v[80] << (32 - (lk[0] % 16)));
        v[83] = (v[83] << (lk[1] % 16)) | (v[83] >>> (32 - (lk[1] % 16)));
        v[82] += lk[0];
        v[85] += lk[1];
        v[84] += lk[0];
        v[87] ^= lk[1];
        v[86] = (v[86] >>> (lk[0] % 16)) | (v[86] << (32 - (lk[0] % 16)));
        v[89] -= lk[1];
        v[88] -= lk[0];
        v[91] += lk[1];
        v[90] ^= lk[0];
        v[93] += lk[1];
        v[92] ^= lk[0];
        v[95] = (v[95] << (lk[1] % 16)) | (v[95] >>> (32 - (lk[1] % 16)));
        v[94] = (v[94] >>> (lk[0] % 16)) | (v[94] << (32 - (lk[0] % 16)));
        v[97] += lk[1];
        v[96] = (v[96] >>> (lk[0] % 16)) | (v[96] << (32 - (lk[0] % 16)));
        v[99] += lk[1];
        v[98] = (v[98] >>> (lk[0] % 16)) | (v[98] << (32 - (lk[0] % 16)));
        v[101] = (v[101] << (lk[1] % 16)) | (v[101] >>> (32 - (lk[1] % 16)));
        v[100] += lk[0];
        v[103] += lk[1];
        v[102] += lk[0];
        v[105] ^= lk[1];
        v[104] = (v[104] >>> (lk[0] % 16)) | (v[104] << (32 - (lk[0] % 16)));
        v[107] -= lk[1];
        v[106] -= lk[0];
        v[109] += lk[1];
        v[108] ^= lk[0];
        v[111] += lk[1];
        v[110] ^= lk[0];
        v[113] = (v[113] << (lk[1] % 16)) | (v[113] >>> (32 - (lk[1] % 16)));
        v[112] = (v[112] >>> (lk[0] % 16)) | (v[112] << (32 - (lk[0] % 16)));
        v[115] += lk[1];
        v[114] = (v[114] >>> (lk[0] % 16)) | (v[114] << (32 - (lk[0] % 16)));
        v[117] += lk[1];
        v[116] = (v[116] >>> (lk[0] % 16)) | (v[116] << (32 - (lk[0] % 16)));
        for (var I = 0; I < 118; I += 2) {
            var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
            for (i = 0; i < rk[I / 2]; i++) {
                v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
                sum -= d;
                v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
            }
            v[I] = v0 ^ k2[1];
            v[I + 1] = v1 ^ k2[0];
        }
        for (var O = 117; O > 0; O--) {
            v[O] ^= v[O - 1];
        }
        v[0] ^= 0x3a3603ef;
        var strc = "";
        for (var i = 0; i < v.length; i++) {
            strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
        }
        return strc;
    }

    function ub98484234(j9f6b91b0, j9f6b91b1, j9f6b91b2) {
        var rk = [11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31, 11, 29, 34, 20, 10, 11, 34, 38, 31];
        var k2 = [0x10de562c, 0xdf3efd5];
        var lk = [0x10de562c, 0xdf3efd5];
        var v = j9f6b91b.slice(0);
        var k = [0x3bbe6784, 0x6cd672ae, 0x96496df1, 0xbfe901eb];
        for (var O = 0; O < 404; O++) {
            v[O] ^= 0x1f885510;
        }
        v[1] = (v[1] >>> (lk[1] % 16)) | (v[1] << (32 - (lk[1] % 16)));
        v[0] ^= lk[0];
        v[3] ^= lk[1];
        v[2] += lk[0];
        v[5] ^= lk[1];
        v[4] = (v[4] >>> (lk[0] % 16)) | (v[4] << (32 - (lk[0] % 16)));
        v[7] -= lk[1];
        v[6] += lk[0];
        v[9] -= lk[1];
        v[8] -= lk[0];
        v[11] = (v[11] << (lk[1] % 16)) | (v[11] >>> (32 - (lk[1] % 16)));
        v[10] -= lk[0];
        v[13] ^= lk[1];
        v[12] ^= lk[0];
        v[15] = (v[15] >>> (lk[1] % 16)) | (v[15] << (32 - (lk[1] % 16)));
        v[14] = (v[14] >>> (lk[0] % 16)) | (v[14] << (32 - (lk[0] % 16)));
        v[17] -= lk[1];
        v[16] -= lk[0];
        v[19] = (v[19] >>> (lk[1] % 16)) | (v[19] << (32 - (lk[1] % 16)));
        v[18] ^= lk[0];
        v[21] ^= lk[1];
        v[20] += lk[0];
        v[23] ^= lk[1];
        v[22] = (v[22] >>> (lk[0] % 16)) | (v[22] << (32 - (lk[0] % 16)));
        v[25] -= lk[1];
        v[24] += lk[0];
        v[27] -= lk[1];
        v[26] -= lk[0];
        v[29] = (v[29] << (lk[1] % 16)) | (v[29] >>> (32 - (lk[1] % 16)));
        v[28] -= lk[0];
        v[31] ^= lk[1];
        v[30] ^= lk[0];
        v[33] = (v[33] >>> (lk[1] % 16)) | (v[33] << (32 - (lk[1] % 16)));
        v[32] = (v[32] >>> (lk[0] % 16)) | (v[32] << (32 - (lk[0] % 16)));
        v[35] -= lk[1];
        v[34] -= lk[0];
        v[37] = (v[37] >>> (lk[1] % 16)) | (v[37] << (32 - (lk[1] % 16)));
        v[36] ^= lk[0];
        v[39] ^= lk[1];
        v[38] += lk[0];
        v[41] ^= lk[1];
        v[40] = (v[40] >>> (lk[0] % 16)) | (v[40] << (32 - (lk[0] % 16)));
        v[43] -= lk[1];
        v[42] += lk[0];
        v[45] -= lk[1];
        v[44] -= lk[0];
        v[47] = (v[47] << (lk[1] % 16)) | (v[47] >>> (32 - (lk[1] % 16)));
        v[46] -= lk[0];
        v[49] ^= lk[1];
        v[48] ^= lk[0];
        v[51] = (v[51] >>> (lk[1] % 16)) | (v[51] << (32 - (lk[1] % 16)));
        v[50] = (v[50] >>> (lk[0] % 16)) | (v[50] << (32 - (lk[0] % 16)));
        v[53] -= lk[1];
        v[52] -= lk[0];
        v[55] = (v[55] >>> (lk[1] % 16)) | (v[55] << (32 - (lk[1] % 16)));
        v[54] ^= lk[0];
        v[57] ^= lk[1];
        v[56] += lk[0];
        v[59] ^= lk[1];
        v[58] = (v[58] >>> (lk[0] % 16)) | (v[58] << (32 - (lk[0] % 16)));
        v[61] -= lk[1];
        v[60] += lk[0];
        v[63] -= lk[1];
        v[62] -= lk[0];
        v[65] = (v[65] << (lk[1] % 16)) | (v[65] >>> (32 - (lk[1] % 16)));
        v[64] -= lk[0];
        v[67] ^= lk[1];
        v[66] ^= lk[0];
        v[69] = (v[69] >>> (lk[1] % 16)) | (v[69] << (32 - (lk[1] % 16)));
        v[68] = (v[68] >>> (lk[0] % 16)) | (v[68] << (32 - (lk[0] % 16)));
        v[71] -= lk[1];
        v[70] -= lk[0];
        v[73] = (v[73] >>> (lk[1] % 16)) | (v[73] << (32 - (lk[1] % 16)));
        v[72] ^= lk[0];
        v[75] ^= lk[1];
        v[74] += lk[0];
        v[77] ^= lk[1];
        v[76] = (v[76] >>> (lk[0] % 16)) | (v[76] << (32 - (lk[0] % 16)));
        v[79] -= lk[1];
        v[78] += lk[0];
        v[81] -= lk[1];
        v[80] -= lk[0];
        v[83] = (v[83] << (lk[1] % 16)) | (v[83] >>> (32 - (lk[1] % 16)));
        v[82] -= lk[0];
        v[85] ^= lk[1];
        v[84] ^= lk[0];
        v[87] = (v[87] >>> (lk[1] % 16)) | (v[87] << (32 - (lk[1] % 16)));
        v[86] = (v[86] >>> (lk[0] % 16)) | (v[86] << (32 - (lk[0] % 16)));
        v[89] -= lk[1];
        v[88] -= lk[0];
        v[91] = (v[91] >>> (lk[1] % 16)) | (v[91] << (32 - (lk[1] % 16)));
        v[90] ^= lk[0];
        v[93] ^= lk[1];
        v[92] += lk[0];
        v[95] ^= lk[1];
        v[94] = (v[94] >>> (lk[0] % 16)) | (v[94] << (32 - (lk[0] % 16)));
        v[97] -= lk[1];
        v[96] += lk[0];
        v[99] -= lk[1];
        v[98] -= lk[0];
        v[101] = (v[101] << (lk[1] % 16)) | (v[101] >>> (32 - (lk[1] % 16)));
        v[100] -= lk[0];
        v[103] ^= lk[1];
        v[102] ^= lk[0];
        v[105] = (v[105] >>> (lk[1] % 16)) | (v[105] << (32 - (lk[1] % 16)));
        v[104] = (v[104] >>> (lk[0] % 16)) | (v[104] << (32 - (lk[0] % 16)));
        v[107] -= lk[1];
        v[106] -= lk[0];
        v[109] = (v[109] >>> (lk[1] % 16)) | (v[109] << (32 - (lk[1] % 16)));
        v[108] ^= lk[0];
        v[111] ^= lk[1];
        v[110] += lk[0];
        v[113] ^= lk[1];
        v[112] = (v[112] >>> (lk[0] % 16)) | (v[112] << (32 - (lk[0] % 16)));
        v[115] -= lk[1];
        v[114] += lk[0];
        v[117] -= lk[1];
        v[116] -= lk[0];
        v[119] = (v[119] << (lk[1] % 16)) | (v[119] >>> (32 - (lk[1] % 16)));
        v[118] -= lk[0];
        v[121] ^= lk[1];
        v[120] ^= lk[0];
        v[123] = (v[123] >>> (lk[1] % 16)) | (v[123] << (32 - (lk[1] % 16)));
        v[122] = (v[122] >>> (lk[0] % 16)) | (v[122] << (32 - (lk[0] % 16)));
        v[125] -= lk[1];
        v[124] -= lk[0];
        v[127] = (v[127] >>> (lk[1] % 16)) | (v[127] << (32 - (lk[1] % 16)));
        v[126] ^= lk[0];
        v[129] ^= lk[1];
        v[128] += lk[0];
        v[131] ^= lk[1];
        v[130] = (v[130] >>> (lk[0] % 16)) | (v[130] << (32 - (lk[0] % 16)));
        v[133] -= lk[1];
        v[132] += lk[0];
        v[135] -= lk[1];
        v[134] -= lk[0];
        v[137] = (v[137] << (lk[1] % 16)) | (v[137] >>> (32 - (lk[1] % 16)));
        v[136] -= lk[0];
        v[139] ^= lk[1];
        v[138] ^= lk[0];
        v[141] = (v[141] >>> (lk[1] % 16)) | (v[141] << (32 - (lk[1] % 16)));
        v[140] = (v[140] >>> (lk[0] % 16)) | (v[140] << (32 - (lk[0] % 16)));
        v[143] -= lk[1];
        v[142] -= lk[0];
        v[145] = (v[145] >>> (lk[1] % 16)) | (v[145] << (32 - (lk[1] % 16)));
        v[144] ^= lk[0];
        v[147] ^= lk[1];
        v[146] += lk[0];
        v[149] ^= lk[1];
        v[148] = (v[148] >>> (lk[0] % 16)) | (v[148] << (32 - (lk[0] % 16)));
        v[151] -= lk[1];
        v[150] += lk[0];
        v[153] -= lk[1];
        v[152] -= lk[0];
        v[155] = (v[155] << (lk[1] % 16)) | (v[155] >>> (32 - (lk[1] % 16)));
        v[154] -= lk[0];
        v[157] ^= lk[1];
        v[156] ^= lk[0];
        v[159] = (v[159] >>> (lk[1] % 16)) | (v[159] << (32 - (lk[1] % 16)));
        v[158] = (v[158] >>> (lk[0] % 16)) | (v[158] << (32 - (lk[0] % 16)));
        v[161] -= lk[1];
        v[160] -= lk[0];
        v[163] = (v[163] >>> (lk[1] % 16)) | (v[163] << (32 - (lk[1] % 16)));
        v[162] ^= lk[0];
        v[165] ^= lk[1];
        v[164] += lk[0];
        v[167] ^= lk[1];
        v[166] = (v[166] >>> (lk[0] % 16)) | (v[166] << (32 - (lk[0] % 16)));
        v[169] -= lk[1];
        v[168] += lk[0];
        v[171] -= lk[1];
        v[170] -= lk[0];
        v[173] = (v[173] << (lk[1] % 16)) | (v[173] >>> (32 - (lk[1] % 16)));
        v[172] -= lk[0];
        v[175] ^= lk[1];
        v[174] ^= lk[0];
        v[177] = (v[177] >>> (lk[1] % 16)) | (v[177] << (32 - (lk[1] % 16)));
        v[176] = (v[176] >>> (lk[0] % 16)) | (v[176] << (32 - (lk[0] % 16)));
        v[179] -= lk[1];
        v[178] -= lk[0];
        v[181] = (v[181] >>> (lk[1] % 16)) | (v[181] << (32 - (lk[1] % 16)));
        v[180] ^= lk[0];
        v[183] ^= lk[1];
        v[182] += lk[0];
        v[185] ^= lk[1];
        v[184] = (v[184] >>> (lk[0] % 16)) | (v[184] << (32 - (lk[0] % 16)));
        v[187] -= lk[1];
        v[186] += lk[0];
        v[189] -= lk[1];
        v[188] -= lk[0];
        v[191] = (v[191] << (lk[1] % 16)) | (v[191] >>> (32 - (lk[1] % 16)));
        v[190] -= lk[0];
        v[193] ^= lk[1];
        v[192] ^= lk[0];
        v[195] = (v[195] >>> (lk[1] % 16)) | (v[195] << (32 - (lk[1] % 16)));
        v[194] = (v[194] >>> (lk[0] % 16)) | (v[194] << (32 - (lk[0] % 16)));
        v[197] -= lk[1];
        v[196] -= lk[0];
        v[199] = (v[199] >>> (lk[1] % 16)) | (v[199] << (32 - (lk[1] % 16)));
        v[198] ^= lk[0];
        v[201] ^= lk[1];
        v[200] += lk[0];
        v[203] ^= lk[1];
        v[202] = (v[202] >>> (lk[0] % 16)) | (v[202] << (32 - (lk[0] % 16)));
        v[205] -= lk[1];
        v[204] += lk[0];
        v[207] -= lk[1];
        v[206] -= lk[0];
        v[209] = (v[209] << (lk[1] % 16)) | (v[209] >>> (32 - (lk[1] % 16)));
        v[208] -= lk[0];
        v[211] ^= lk[1];
        v[210] ^= lk[0];
        v[213] = (v[213] >>> (lk[1] % 16)) | (v[213] << (32 - (lk[1] % 16)));
        v[212] = (v[212] >>> (lk[0] % 16)) | (v[212] << (32 - (lk[0] % 16)));
        v[215] -= lk[1];
        v[214] -= lk[0];
        v[217] = (v[217] >>> (lk[1] % 16)) | (v[217] << (32 - (lk[1] % 16)));
        v[216] ^= lk[0];
        v[219] ^= lk[1];
        v[218] += lk[0];
        v[221] ^= lk[1];
        v[220] = (v[220] >>> (lk[0] % 16)) | (v[220] << (32 - (lk[0] % 16)));
        v[223] -= lk[1];
        v[222] += lk[0];
        v[225] -= lk[1];
        v[224] -= lk[0];
        v[227] = (v[227] << (lk[1] % 16)) | (v[227] >>> (32 - (lk[1] % 16)));
        v[226] -= lk[0];
        v[229] ^= lk[1];
        v[228] ^= lk[0];
        v[231] = (v[231] >>> (lk[1] % 16)) | (v[231] << (32 - (lk[1] % 16)));
        v[230] = (v[230] >>> (lk[0] % 16)) | (v[230] << (32 - (lk[0] % 16)));
        v[233] -= lk[1];
        v[232] -= lk[0];
        v[235] = (v[235] >>> (lk[1] % 16)) | (v[235] << (32 - (lk[1] % 16)));
        v[234] ^= lk[0];
        v[237] ^= lk[1];
        v[236] += lk[0];
        v[239] ^= lk[1];
        v[238] = (v[238] >>> (lk[0] % 16)) | (v[238] << (32 - (lk[0] % 16)));
        v[241] -= lk[1];
        v[240] += lk[0];
        v[243] -= lk[1];
        v[242] -= lk[0];
        v[245] = (v[245] << (lk[1] % 16)) | (v[245] >>> (32 - (lk[1] % 16)));
        v[244] -= lk[0];
        v[247] ^= lk[1];
        v[246] ^= lk[0];
        v[249] = (v[249] >>> (lk[1] % 16)) | (v[249] << (32 - (lk[1] % 16)));
        v[248] = (v[248] >>> (lk[0] % 16)) | (v[248] << (32 - (lk[0] % 16)));
        v[251] -= lk[1];
        v[250] -= lk[0];
        v[253] = (v[253] >>> (lk[1] % 16)) | (v[253] << (32 - (lk[1] % 16)));
        v[252] ^= lk[0];
        v[255] ^= lk[1];
        v[254] += lk[0];
        v[257] ^= lk[1];
        v[256] = (v[256] >>> (lk[0] % 16)) | (v[256] << (32 - (lk[0] % 16)));
        v[259] -= lk[1];
        v[258] += lk[0];
        v[261] -= lk[1];
        v[260] -= lk[0];
        v[263] = (v[263] << (lk[1] % 16)) | (v[263] >>> (32 - (lk[1] % 16)));
        v[262] -= lk[0];
        v[265] ^= lk[1];
        v[264] ^= lk[0];
        v[267] = (v[267] >>> (lk[1] % 16)) | (v[267] << (32 - (lk[1] % 16)));
        v[266] = (v[266] >>> (lk[0] % 16)) | (v[266] << (32 - (lk[0] % 16)));
        v[269] -= lk[1];
        v[268] -= lk[0];
        v[271] = (v[271] >>> (lk[1] % 16)) | (v[271] << (32 - (lk[1] % 16)));
        v[270] ^= lk[0];
        v[273] ^= lk[1];
        v[272] += lk[0];
        v[275] ^= lk[1];
        v[274] = (v[274] >>> (lk[0] % 16)) | (v[274] << (32 - (lk[0] % 16)));
        v[277] -= lk[1];
        v[276] += lk[0];
        v[279] -= lk[1];
        v[278] -= lk[0];
        v[281] = (v[281] << (lk[1] % 16)) | (v[281] >>> (32 - (lk[1] % 16)));
        v[280] -= lk[0];
        v[283] ^= lk[1];
        v[282] ^= lk[0];
        v[285] = (v[285] >>> (lk[1] % 16)) | (v[285] << (32 - (lk[1] % 16)));
        v[284] = (v[284] >>> (lk[0] % 16)) | (v[284] << (32 - (lk[0] % 16)));
        v[287] -= lk[1];
        v[286] -= lk[0];
        v[289] = (v[289] >>> (lk[1] % 16)) | (v[289] << (32 - (lk[1] % 16)));
        v[288] ^= lk[0];
        v[291] ^= lk[1];
        v[290] += lk[0];
        v[293] ^= lk[1];
        v[292] = (v[292] >>> (lk[0] % 16)) | (v[292] << (32 - (lk[0] % 16)));
        v[295] -= lk[1];
        v[294] += lk[0];
        v[297] -= lk[1];
        v[296] -= lk[0];
        v[299] = (v[299] << (lk[1] % 16)) | (v[299] >>> (32 - (lk[1] % 16)));
        v[298] -= lk[0];
        v[301] ^= lk[1];
        v[300] ^= lk[0];
        v[303] = (v[303] >>> (lk[1] % 16)) | (v[303] << (32 - (lk[1] % 16)));
        v[302] = (v[302] >>> (lk[0] % 16)) | (v[302] << (32 - (lk[0] % 16)));
        v[305] -= lk[1];
        v[304] -= lk[0];
        v[307] = (v[307] >>> (lk[1] % 16)) | (v[307] << (32 - (lk[1] % 16)));
        v[306] ^= lk[0];
        v[309] ^= lk[1];
        v[308] += lk[0];
        v[311] ^= lk[1];
        v[310] = (v[310] >>> (lk[0] % 16)) | (v[310] << (32 - (lk[0] % 16)));
        v[313] -= lk[1];
        v[312] += lk[0];
        v[315] -= lk[1];
        v[314] -= lk[0];
        v[317] = (v[317] << (lk[1] % 16)) | (v[317] >>> (32 - (lk[1] % 16)));
        v[316] -= lk[0];
        v[319] ^= lk[1];
        v[318] ^= lk[0];
        v[321] = (v[321] >>> (lk[1] % 16)) | (v[321] << (32 - (lk[1] % 16)));
        v[320] = (v[320] >>> (lk[0] % 16)) | (v[320] << (32 - (lk[0] % 16)));
        v[323] -= lk[1];
        v[322] -= lk[0];
        v[325] = (v[325] >>> (lk[1] % 16)) | (v[325] << (32 - (lk[1] % 16)));
        v[324] ^= lk[0];
        v[327] ^= lk[1];
        v[326] += lk[0];
        v[329] ^= lk[1];
        v[328] = (v[328] >>> (lk[0] % 16)) | (v[328] << (32 - (lk[0] % 16)));
        v[331] -= lk[1];
        v[330] += lk[0];
        v[333] -= lk[1];
        v[332] -= lk[0];
        v[335] = (v[335] << (lk[1] % 16)) | (v[335] >>> (32 - (lk[1] % 16)));
        v[334] -= lk[0];
        v[337] ^= lk[1];
        v[336] ^= lk[0];
        v[339] = (v[339] >>> (lk[1] % 16)) | (v[339] << (32 - (lk[1] % 16)));
        v[338] = (v[338] >>> (lk[0] % 16)) | (v[338] << (32 - (lk[0] % 16)));
        v[341] -= lk[1];
        v[340] -= lk[0];
        v[343] = (v[343] >>> (lk[1] % 16)) | (v[343] << (32 - (lk[1] % 16)));
        v[342] ^= lk[0];
        v[345] ^= lk[1];
        v[344] += lk[0];
        v[347] ^= lk[1];
        v[346] = (v[346] >>> (lk[0] % 16)) | (v[346] << (32 - (lk[0] % 16)));
        v[349] -= lk[1];
        v[348] += lk[0];
        v[351] -= lk[1];
        v[350] -= lk[0];
        v[353] = (v[353] << (lk[1] % 16)) | (v[353] >>> (32 - (lk[1] % 16)));
        v[352] -= lk[0];
        v[355] ^= lk[1];
        v[354] ^= lk[0];
        v[357] = (v[357] >>> (lk[1] % 16)) | (v[357] << (32 - (lk[1] % 16)));
        v[356] = (v[356] >>> (lk[0] % 16)) | (v[356] << (32 - (lk[0] % 16)));
        v[359] -= lk[1];
        v[358] -= lk[0];
        v[361] = (v[361] >>> (lk[1] % 16)) | (v[361] << (32 - (lk[1] % 16)));
        v[360] ^= lk[0];
        v[363] ^= lk[1];
        v[362] += lk[0];
        v[365] ^= lk[1];
        v[364] = (v[364] >>> (lk[0] % 16)) | (v[364] << (32 - (lk[0] % 16)));
        v[367] -= lk[1];
        v[366] += lk[0];
        v[369] -= lk[1];
        v[368] -= lk[0];
        v[371] = (v[371] << (lk[1] % 16)) | (v[371] >>> (32 - (lk[1] % 16)));
        v[370] -= lk[0];
        v[373] ^= lk[1];
        v[372] ^= lk[0];
        v[375] = (v[375] >>> (lk[1] % 16)) | (v[375] << (32 - (lk[1] % 16)));
        v[374] = (v[374] >>> (lk[0] % 16)) | (v[374] << (32 - (lk[0] % 16)));
        v[377] -= lk[1];
        v[376] -= lk[0];
        v[379] = (v[379] >>> (lk[1] % 16)) | (v[379] << (32 - (lk[1] % 16)));
        v[378] ^= lk[0];
        v[381] ^= lk[1];
        v[380] += lk[0];
        v[383] ^= lk[1];
        v[382] = (v[382] >>> (lk[0] % 16)) | (v[382] << (32 - (lk[0] % 16)));
        v[385] -= lk[1];
        v[384] += lk[0];
        v[387] -= lk[1];
        v[386] -= lk[0];
        v[389] = (v[389] << (lk[1] % 16)) | (v[389] >>> (32 - (lk[1] % 16)));
        v[388] -= lk[0];
        v[391] ^= lk[1];
        v[390] ^= lk[0];
        v[393] = (v[393] >>> (lk[1] % 16)) | (v[393] << (32 - (lk[1] % 16)));
        v[392] = (v[392] >>> (lk[0] % 16)) | (v[392] << (32 - (lk[0] % 16)));
        v[395] -= lk[1];
        v[394] -= lk[0];
        v[397] = (v[397] >>> (lk[1] % 16)) | (v[397] << (32 - (lk[1] % 16)));
        v[396] ^= lk[0];
        v[399] ^= lk[1];
        v[398] += lk[0];
        v[401] ^= lk[1];
        v[400] = (v[400] >>> (lk[0] % 16)) | (v[400] << (32 - (lk[0] % 16)));
        v[403] -= lk[1];
        v[402] += lk[0];
        for (var I = 0; I < 404; I += 2) {
            var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
            for (i = 0; i < rk[I / 2]; i++) {
                v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
                sum -= d;
                v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
            }
            v[I] = v0 ^ k2[1];
            v[I + 1] = v1 ^ k2[0];
        }
        for (var O = 403; O > 0; O--) {
            v[O] ^= v[O - 1];
        }
        v[0] ^= 0x1f885510;
        var strc = "";
        for (var i = 0; i < v.length; i++) {
            strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
        }
        return strc;
    }

    var j9f6b91b = [0x3d8d42b9, 0x91d1c1a4, 0x69f264f1, 0x6bc7236e, 0x6bc71560, 0x86e0614e, 0x5abd055, 0x9865b4ee, 0x8fc406cd, 0x3ef3166, 0x48a45653, 0xebabec0, 0x22bd07be, 0x623402c2, 0x44ceafb2, 0x647f19a2, 0x1630b020, 0x5b8e6a18, 0x54a82122, 0xe0003bb0, 0xdeb8f61c, 0xd85741e8, 0xfea5cbc6, 0x3490d4c4, 0x6ab90a29, 0x54a6c23d, 0xd10d5bd6, 0x7d1263c7, 0xbf2081b3, 0x17f4b17d, 0x1428886d, 0x901d977d, 0x83d72428, 0xbf10ce42, 0x78176a46, 0x157ce9d1, 0xd837812e, 0x7015eed3, 0x5b630e41, 0xbba703bc, 0x86dff3dc, 0x495564c1, 0x8a071776, 0x8521d7da, 0x19e56be3, 0x45a85893, 0x8f4dcd4d, 0xdb639e71, 0xc3d8a6ec, 0xd231055e, 0x25114a31, 0x651265d3, 0x918e715f, 0x54b21348, 0x6fdd1f1c, 0x14a6312d, 0x876cc0cc, 0x9de87348, 0xc8ee701b, 0x8eaaa318, 0x9bcaa8b2, 0xf9c10882, 0xc8cfcd07, 0xe972e0a, 0x7ba3f727, 0x59fae547, 0x36ddeaa0, 0x8533997f, 0x64901116, 0xb663ca32, 0xe4ecbda8, 0x8f2eeef3, 0x943c4db6, 0x7aa9dc46, 0xe1eb43da, 0xff922f66, 0x95c71e00, 0x26141c1, 0x34aa7165, 0xdb7a46a9, 0x5e3dacae, 0xd8321807, 0x2ec7a8f1, 0x505bb81b, 0xaa813aba, 0x95367549, 0x40ca5879, 0xa1faa934, 0xe83b0103, 0xa8240361, 0x838f3395, 0x55ead513, 0xa3ff169, 0x11d9ae99, 0x90400a58, 0xe299ffd, 0xd6167341, 0x74d3cb71, 0xa90bd326, 0x6f411e28, 0xa5d57d64, 0x80155a1b, 0x483b48df, 0xf0e89f3e, 0xae5a01d2, 0x17e16ef8, 0xa9a22f59, 0xd9d29fa2, 0x96677ebe, 0x9eb0f588, 0x8522826c, 0x89513806, 0xd2f5aec6, 0xd719ef24, 0x84cb4d34, 0xe8bb7702, 0x6f0947e7, 0x6f19b28c, 0x8c5ceefd, 0x13bcb745, 0xc6bd602b, 0x5f77d39b, 0x7186c505, 0x2eaf4776, 0x6d614bdf, 0x726e0e52, 0xd6e4e1e1, 0x6e68dd69, 0x2911a09d, 0xca3ce656, 0xc43c463e, 0x376637ce, 0xb5f567c, 0xe99ca0b3, 0x7f865e07, 0xa620043a, 0x4668f29, 0xb26c2ad4, 0xc5d3ec2d, 0xd40fd61b, 0xda721fd0, 0xc5637c77, 0x9db574b1, 0x7c3f0a46, 0xdbfea2fb, 0x4ed212e2, 0xde63bd90, 0x3f3da6d5, 0x3849ac8b, 0x98bac93a, 0x178b70a0, 0x14c803a6, 0xdc5f0296, 0xbf7984eb, 0xb74ca988, 0xd0fdca4c, 0x8c5e2131, 0x8d4d1c31, 0x58dd4d9d, 0xaa1a3e0b, 0x4aa186ed, 0x53c65678, 0x1a4bfcb0, 0xfe75dc3d, 0x25fdc089, 0x37bda583, 0x7b9da499, 0x57ada92f, 0xb428a712, 0xa32f92b3, 0xad4af236, 0x34a6cddf, 0xca3f6c85, 0x9bf877cc, 0x8cef4d81, 0xea6a2652, 0x86fb2020, 0x5036f54b, 0x2beeb0d4, 0xae0a0004, 0x77c21a8c, 0x6cf1deb4, 0x51f3b4f2, 0x86879f2, 0xac648d1, 0x79ee8bcd, 0x4074ed8e, 0x80987b1, 0xb3be18f9, 0xa0347eae, 0x8beb0e96, 0x7de1aacf, 0x521b85b7, 0xba733d38, 0xbf61e61b, 0xe4901b6b, 0x3ad794e3, 0xd92bc199, 0x33bf6154, 0xa061efbd, 0xca13af15, 0x7d6764a5, 0x1d2d5022, 0xa3a5cc3d, 0xc1e83441, 0x8ba26a89, 0xf7d49ac, 0xbd72c46f, 0xbd6950c3, 0x9f645e23, 0x9bf2d609, 0x9b4e44ee, 0x5fc1efd3, 0xec6b8fb1, 0xef4bb128, 0x732bd964, 0xaa2595de, 0xb3b62ca, 0x9eae4e94, 0x510a5ca8, 0x5ea8e430, 0xe2b51aec, 0x21637d0a, 0xd69db204, 0x20b00a2, 0xa0833e1e, 0x2717ccfc, 0xde98d71f, 0x3d84cc7c, 0xd99a3861, 0x5fbc9785, 0x6acf4fd2, 0x3fa831a6, 0x608871e, 0x43024281, 0x6c6f3a43, 0x237f7886, 0xd7e62402, 0xcaff35b3, 0x3051da28, 0x4ca17bfe, 0x2f3e0d2c, 0x6452ed6a, 0x2b9477b4, 0x20f01a2b, 0xdc553ad1, 0x1f581bb9, 0x2dea1605, 0x56d1e604, 0x1968d5a, 0x49a16e3, 0x6c57524e, 0x8ff3b66b, 0xcd8267e0, 0x3a0dfe09, 0x20d9f12d, 0x4a08b4f3, 0x34ae28e4, 0x65969681, 0x64e6d34e, 0x3b36c281, 0x25dff4f1, 0xe0a2dc1d, 0x73b759a, 0xfd4f2e0, 0x5623d6ce, 0xa0a6ed56, 0x21db4f54, 0x757d64ba, 0xe962cf3f, 0x36cc0445, 0xfebf88b4, 0xad370373, 0xc87830ea, 0xf56f47de, 0xe7a68d30, 0xc2697f3, 0x9c74287, 0x5691449d, 0xc5aa6f37, 0x78360eaf, 0x638aa6b8, 0x2ea0133e, 0x4899ced2, 0x96e0c575, 0xa444640c, 0x57cd9bcb, 0x51963b83, 0x95bfea71, 0x6947182, 0xc8badb16, 0x883abdc5, 0xf257400f, 0x50f0fbcd, 0x9e434ddb, 0x9ec36db2, 0x576ba8cf, 0x90052173, 0xabb74094, 0x2a1e7eb8, 0x2dfb7494, 0xd859afd, 0xd22bff0, 0x4a17f4ba, 0xbcc5bb64, 0x6babfcc8, 0xb08deefc, 0xaef2c93c, 0xa449e156, 0xb1112fb7, 0x18cc7b8d, 0x9752f455, 0xefd6ac3c, 0xb6fab0d6, 0xd0d3a2c3, 0x23bd2ed, 0x9a62a32, 0xd6ecbded, 0x4659d660, 0x6d79449b, 0xcc63b073, 0xc58331c7, 0xf8f50024, 0x657eb3e5, 0xd935d8c6, 0x36fef445, 0x59f3ac58, 0x438ee215, 0xb653beb7, 0x8b8845b6, 0xcf69cd04, 0xd2e17ef1, 0xbe058ef7, 0xeafd9bce, 0xb1f6ed2c, 0x7755d998, 0x9df8fbfd, 0xa19e19b9, 0x9c04cd23, 0xa0e420b5, 0xf204e4b6, 0x7c3aa3f2, 0x265aa2b5, 0x9e9dad23, 0x3a39fe0, 0xdc89d61e, 0xd109346b, 0xdb05cd8a, 0x1e015316, 0xeec9d7a7, 0x4668a1c3, 0x24f290ff, 0x4bb15bd7, 0x997f492a, 0xeac235ca, 0x8a24a62d, 0x452fa3a6, 0xf1a75965, 0x59e309c1, 0x2a6a6752, 0xa659d145, 0xa35dae24, 0xae8beb24, 0xe7f20ea0, 0x4c1b4868, 0xea0f34dd, 0xff783d07, 0x6cf09571, 0xa127eea9, 0x9e200c6e, 0x3f97087e, 0x5a302dc6, 0x8ec0837e, 0xc7cdc9d8, 0xcabd51ee, 0x551630ed, 0x964a9b4f, 0xf67ad4b, 0xfd9d08a2, 0x2d4fb088, 0xcb299779, 0xc3779390, 0x1b0f7d8b, 0x1a8e39e0, 0x99a30808, 0x7dcb7aa3, 0x5c1acf1d, 0x92c104a6, 0x67807199, 0x98e161bd, 0xb863bd65, 0x1a9e141c, 0xe0db110a, 0x2a08688, 0x1bf2f600, 0xc457bd7e, 0x425fa42b, 0x810b5919, 0x83c0260c, 0x909b4522, 0xcc226058, 0xbf3082f9, 0x52f5b355, 0xe57d6d62];

    function sign(xx0, xx1, xx2, rb) {
        var cb = xx0 + xx1 + xx2 + "220120240902";
        var re = [];
        for (var i = 0; i < rb.length / 8; i++) re[i] = (parseInt(rb.substr(i * 8, 2), 16) & 0xff) | ((parseInt(rb.substr(i * 8 + 2, 2), 16) << 8) & 0xff00) | ((parseInt(rb.substr(i * 8 + 4, 2), 16) << 24) >>> 8) | (parseInt(rb.substr(i * 8 + 6, 2), 16) << 24);
        var k2 = [0x6cd0fe5, 0x430340d5, 0x3a81a0, 0x77b85d8b];
        for (var I = 0; I < 2; I++) {
            var v0 = re[I * 2], v1 = re[I * 2 + 1], sum = 0, i = 0;
            var delta = 0x9e3779b9;
            for (i = 0; i < 32; i++) {
                sum += delta;
                v0 += ((v1 << 4) + k2[0]) ^ (v1 + sum) ^ ((v1 >>> 5) + k2[1]);
                v1 += ((v0 << 4) + k2[2]) ^ (v0 + sum) ^ ((v0 >>> 5) + k2[3]);
            }
            re[I * 2] = v0;
            re[I * 2 + 1] = v1;
        }
        re[0] ^= k2[0];
        re[0] = (re[0] << (k2[2] % 16)) | (re[0] >>> (32 - (k2[2] % 16)));
        re[0] = (re[0] << (k2[0] % 16)) | (re[0] >>> (32 - (k2[0] % 16)));
        re[0] ^= k2[2];
        re[1] -= k2[1];
        re[1] ^= k2[3];
        re[1] ^= k2[1];
        re[1] -= k2[3];
        re[1] += k2[3];
        re[2] = (re[2] << (k2[0] % 16)) | (re[2] >>> (32 - (k2[0] % 16)));
        re[2] ^= k2[2];
        re[2] ^= k2[0];
        re[2] = (re[2] << (k2[2] % 16)) | (re[2] >>> (32 - (k2[2] % 16)));
        re[2] = (re[2] >>> (k2[2] % 16)) | (re[2] << (32 - (k2[2] % 16)));
        re[3] -= k2[1];
        re[3] += k2[3];
        re[3] += k2[1];
        re[3] = (re[3] << (k2[3] % 16)) | (re[3] >>> (32 - (k2[3] % 16)));
        re[0] += k2[0];
        re[0] += k2[2];
        re[0] += k2[2];
        re[1] += k2[1];
        re[1] = (re[1] >>> (k2[3] % 16)) | (re[1] << (32 - (k2[3] % 16)));
        re[1] = (re[1] >>> (k2[3] % 16)) | (re[1] << (32 - (k2[3] % 16)));
        re[2] ^= k2[0];
        re[2] ^= k2[2];
        re[2] ^= k2[2];
        re[2] ^= k2[2];
        re[3] = (re[3] << (k2[1] % 16)) | (re[3] >>> (32 - (k2[1] % 16)));
        re[3] = (re[3] << (k2[3] % 16)) | (re[3] >>> (32 - (k2[3] % 16)));
        re[3] += k2[3];
        {
            var hc = '0123456789abcdef'.split('');
            for (var i = 0; i < re.length; i++) {
                var j = 0, s = '';
                for (; j < 4; j++) s += hc[(re[i] >> (j * 8 + 4)) & 15] + hc[(re[i] >> (j * 8)) & 15];
                re[i] = s;
            }
            re = re.join('');
        }
        var rt = "v=220120240902" + "&did=" + xx1 + "&tt=" + xx2 + "&sign=" + re;
        return rt;
    }

    var did = '10000000000000000000000000003306'
    var timestamp = Math.floor(new Date().getTime() / 1000);
    var t10 = timestamp.toString();
    var v = ub98484234().match(/v=(\d+)/)[1];
    // console.log(did)
    // console.log(t10)
    // console.log(v)
    // console.log(rid)
    // console.log(did)

    var rb = CryptoJS.MD5(rid + did + t10 + v).toString();
    let dd = sign(rid, did, t10, rb)
    console.log(dd)
    return parse(dd)
}


export async function DouYuLive() {
    let sign_params = await  gen('884977')
    let url = "https://www.douyu.com/lapi/live/getH5Play/884977"
    let params = {
        'v': sign_params["v"],
        'did': sign_params["did"],
        'tt': sign_params["tt"],
        'sign': sign_params["sign"],
        'ver': '22011191',
        'rid': '884977',
        'rate': '-1'
    }
    let headers = {
        'User-Agent': navigator.userAgent,
        'Referer': 'https://m.douyu.com/',
        'Cookie': 'dy_did=413b835d2ae00270f0c69f6400031601; acf_did=413b835d2ae00270f0c69f6400031601; Hm_lvt_e99aee90ec1b2106afe7ec3b199020a7=1692068308,1694003758; m_did=96003918aa5365bc6dcb4933000316p1; dy_teen_mode=%7B%22uid%22%3A%22472647365%22%2C%22status%22%3A0%2C%22birthday%22%3A%22%22%2C%22password%22%3A%22%22%7D; PHPSESSID=td59qi2fu2gepngb8mlehbeme3; acf_auth=94fc9s%2FeNj%2BKlpU%2Br8tZC3Jo9sZ0wz9ClcHQ1akL2Nhb6ZyCmfjVWSlR3LFFPuePWHRAMo0dt9vPSCoezkFPOeNy4mYcdVOM1a8CbW0ZAee4ipyNB%2Bflr58; dy_auth=bec5yzM8bUFYe%2FnVAjmUAljyrsX%2FcwRW%2FyMHaoArYb5qi8FS9tWR%2B96iCzSnmAryLOjB3Qbeu%2BBD42clnI7CR9vNAo9mva5HyyL41HGsbksx1tEYFOEwxSI; wan_auth37wan=5fd69ed5b27fGM%2FGoswWwDo%2BL%2FRMtnEa4Ix9a%2FsH26qF0sR4iddKMqfnPIhgfHZUqkAk%2FA1d8TX%2B6F7SNp7l6buIxAVf3t9YxmSso8bvHY0%2Fa6RUiv8; acf_uid=472647365; acf_username=472647365; acf_nickname=%E7%94%A8%E6%88%B776576662; acf_own_room=0; acf_groupid=1; acf_phonestatus=1; acf_avatar=https%3A%2F%2Fapic.douyucdn.cn%2Fupload%2Favatar%2Fdefault%2F24_; acf_ct=0; acf_ltkid=25305099; acf_biz=1; acf_stk=90754f8ed18f0c24; Hm_lpvt_e99aee90ec1b2106afe7ec3b199020a7=1694003778'
    }
    const paramsStr = stringify(params);
    console.log(params)
    console.log(paramsStr)

}

await DouYuLive()